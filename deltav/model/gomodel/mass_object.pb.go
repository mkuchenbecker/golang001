// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mass_object.proto

package deltav_model

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetMassRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMassRequest) Reset()         { *m = GetMassRequest{} }
func (m *GetMassRequest) String() string { return proto.CompactTextString(m) }
func (*GetMassRequest) ProtoMessage()    {}
func (*GetMassRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ff7806aaa97ef70, []int{0}
}

func (m *GetMassRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMassRequest.Unmarshal(m, b)
}
func (m *GetMassRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMassRequest.Marshal(b, m, deterministic)
}
func (m *GetMassRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMassRequest.Merge(m, src)
}
func (m *GetMassRequest) XXX_Size() int {
	return xxx_messageInfo_GetMassRequest.Size(m)
}
func (m *GetMassRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMassRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMassRequest proto.InternalMessageInfo

type GetMassResponse struct {
	Kg                   int64    `protobuf:"varint,1,opt,name=kg,proto3" json:"kg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMassResponse) Reset()         { *m = GetMassResponse{} }
func (m *GetMassResponse) String() string { return proto.CompactTextString(m) }
func (*GetMassResponse) ProtoMessage()    {}
func (*GetMassResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ff7806aaa97ef70, []int{1}
}

func (m *GetMassResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMassResponse.Unmarshal(m, b)
}
func (m *GetMassResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMassResponse.Marshal(b, m, deterministic)
}
func (m *GetMassResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMassResponse.Merge(m, src)
}
func (m *GetMassResponse) XXX_Size() int {
	return xxx_messageInfo_GetMassResponse.Size(m)
}
func (m *GetMassResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMassResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMassResponse proto.InternalMessageInfo

func (m *GetMassResponse) GetKg() int64 {
	if m != nil {
		return m.Kg
	}
	return 0
}

func init() {
	proto.RegisterType((*GetMassRequest)(nil), "deltav.model.GetMassRequest")
	proto.RegisterType((*GetMassResponse)(nil), "deltav.model.GetMassResponse")
}

func init() { proto.RegisterFile("mass_object.proto", fileDescriptor_6ff7806aaa97ef70) }

var fileDescriptor_6ff7806aaa97ef70 = []byte{
	// 140 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xcc, 0x4d, 0x2c, 0x2e,
	0x8e, 0xcf, 0x4f, 0xca, 0x4a, 0x4d, 0x2e, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x49,
	0x49, 0xcd, 0x29, 0x49, 0x2c, 0xd3, 0xcb, 0xcd, 0x4f, 0x49, 0xcd, 0x51, 0x12, 0xe0, 0xe2, 0x73,
	0x4f, 0x2d, 0xf1, 0x4d, 0x2c, 0x2e, 0x0e, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x51, 0x52, 0xe4,
	0xe2, 0x87, 0x8b, 0x14, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x0a, 0xf1, 0x71, 0x31, 0x65, 0xa7, 0x4b,
	0x30, 0x2a, 0x30, 0x6a, 0x30, 0x07, 0x31, 0x65, 0xa7, 0x1b, 0x85, 0x71, 0x71, 0x81, 0xe4, 0xfd,
	0xc1, 0xc6, 0x0a, 0x79, 0x70, 0xb1, 0x43, 0x35, 0x08, 0xc9, 0xe8, 0x21, 0x1b, 0xae, 0x87, 0x6a,
	0xb2, 0x94, 0x2c, 0x0e, 0x59, 0x88, 0x2d, 0x4a, 0x0c, 0x49, 0x6c, 0x60, 0x17, 0x1a, 0x03, 0x02,
	0x00, 0x00, 0xff, 0xff, 0x2f, 0x60, 0xf9, 0x96, 0xb6, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MassObjectClient is the client API for MassObject service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MassObjectClient interface {
	GetMass(ctx context.Context, in *GetMassRequest, opts ...grpc.CallOption) (*GetMassResponse, error)
}

type massObjectClient struct {
	cc *grpc.ClientConn
}

func NewMassObjectClient(cc *grpc.ClientConn) MassObjectClient {
	return &massObjectClient{cc}
}

func (c *massObjectClient) GetMass(ctx context.Context, in *GetMassRequest, opts ...grpc.CallOption) (*GetMassResponse, error) {
	out := new(GetMassResponse)
	err := c.cc.Invoke(ctx, "/deltav.model.MassObject/GetMass", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MassObjectServer is the server API for MassObject service.
type MassObjectServer interface {
	GetMass(context.Context, *GetMassRequest) (*GetMassResponse, error)
}

func RegisterMassObjectServer(s *grpc.Server, srv MassObjectServer) {
	s.RegisterService(&_MassObject_serviceDesc, srv)
}

func _MassObject_GetMass_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMassRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MassObjectServer).GetMass(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/deltav.model.MassObject/GetMass",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MassObjectServer).GetMass(ctx, req.(*GetMassRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MassObject_serviceDesc = grpc.ServiceDesc{
	ServiceName: "deltav.model.MassObject",
	HandlerType: (*MassObjectServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMass",
			Handler:    _MassObject_GetMass_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mass_object.proto",
}
